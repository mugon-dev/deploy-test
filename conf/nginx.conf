#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    include       variable.conf;
    default_type  text/html;

    # log
    log_format main '$remote_addr - [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time';
    access_log access.log main;

    # gzip setting
    gzip on;
    gzip_disable "msie6";
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    proxy_cache_path /usr/share/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g;

    server {
        listen 80;
        server_name  jajakjajak-demo.ga www.jajakjajak-demo.ga;

        location / {
            return 301 https://$host$request_uri;
        }

      

        location ~ /.well-known/acme-challenge {
         allow all; 
         root /var/www/certbot;
        }
    }

    # HTTPS server
    #
    server {
        listen 443 ssl;
        server_name jajakjajak-demo.ga www.jajakjajak-demo.ga; # 도메인으로 변경
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/jajakjajak-demo.ga/fullchain.pem; # example.org를 도메인으로 변경
        ssl_certificate_key /etc/letsencrypt/live/jajakjajak-demo.ga/privkey.pem; # example.or를 도메인으로 변경
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://node;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        location ~* \.(ico|css|gif|jpeg|jpg|png|woff|ttf|otf|svg|woff2|eot)$ {
            proxy_cache my_cache;
            proxy_ignore_headers Cache-Control;
            proxy_cache_valid 30d;
            proxy_pass http://node;
            # access_log off;
            # expires max;
            add_header X-Asset "yes";
            add_header access-control-allow-origin "*";
            # add_header Cache-Control "public";
        }

        location /_next/static {
            proxy_cache my_cache;
            proxy_pass http://node;
        }
    }
    include servers/*;
}